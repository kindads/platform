@model captivate_express_webapp.Models.Advertiser.CreateCampaingModel
@{
  ViewBag.Title = "Configure your site.";
  Layout = "~/Views/Shared/_AdvertiserLayout.cshtml";
  var displayDataChannelMC = ViewBag.IsChannelMailChimp ? "display:inline" : "display:none";
  var displayDataChannelPush = ViewBag.IsChannelPushCrew || ViewBag.IsChannelSuscribers ? "display:inline" : "display:none";
}

@if (TempData["message"] != null)
{
  @Html.Raw(TempData["message"])
}
<link href="~/Content/jHtmlArea/jHtmlArea.css" rel="stylesheet" />
<link href="~/Content/jHtmlArea/jHtmlArea.ColorPickerMenu.css" rel="stylesheet" />

@using (Html.BeginForm("Index", "Campaign", null, FormMethod.Post, new { enctype = "multipart/form-data", @id = "formCampaign" }))
{
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  <div class="container-fluid">
    <div class="form-horizontal">
      <div class="row">
        <div class="col-sm-12 main-bar">
          <h1 class="title">Create your campaign</h1>
        </div>
      </div>

      <div class="row">
        <div class="col-sm-9 col-md-9">
          <div class="white-block clearfix">
            <div class="heading">
              <h2>Configure your message</h2>
            </div>
            <div class="body-content">
              <div class="col-sm-6">
                @Html.Partial("_CampaignData", Model)
                <br />
                <div class="text-center">
                  <input type="submit" id="Status" class="col-sm-12 btn btn-primary btn-lg" value="Create Campaign" />
                </div>
              </div>

              <div class="col-sm-5 col-sm-offset-1" style="@displayDataChannelPush">
                <div class="form-group1 phone">
                  <div id="pnlTitle" class="form-group1 preview-text">
                    <label class="title" id="lblTitleShowcase">Title</label>
                    <br />
                    <label class="message" id="lblMessageShowcase">Content</label>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>


        <div class="col-sm-3 col-md-3 summary-bar">

          <h2>Estimated price</h2>

          <div class="data">
            <label style="@displayDataChannelPush">Cost By Push</label>
            <label style="@displayDataChannelMC">Cost By Email Sending</label>
            <h3>
              @ViewBag.ProductPrice
              <small>KIND</small>
            </h3>
          </div>
          <div class="data">
            <label>Site</label>
            <h3>@ViewBag.Site</h3>
          </div>
          <div class="data" style="@displayDataChannelPush">
            <label>Number</label>
            <h3>1 - 1000 notifications</h3>
          </div>
          <div class="data">
            <label>FINAL PRICE</label>
            <h3>
              @ViewBag.ProductPrice
              <small>KIND</small>
            </h3>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div id="message"></div>
}

<div class="modal fade" id="myModal" role="dialog" aria-labelledby="siteSucessModal" aria-hidden="true" data-keyboard="false" data-backdrop="static">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Campaign register message<label id="lblTitle"></label></h4>
      </div>
      <div class="modal-body">
        <div class="panel">
          <div class="panel-body text-center">
            <form>
              <p><label id="lblBody"></label></p>
              <div class="add-space"></div>
              @Html.ActionLink("View all campaigns", "SortCampaigns", "Campaign", new { @class = "btn btn-default" })
            </form>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <div class="avatar-hint"></div>
      </div>
    </div>
  </div>
</div>

@Html.Partial("_LoadingCampaignModal", Model)
@Scripts.Render("~/bundles/customjs")
<script type="text/javascript">
  $('#formCampaign').submit(function (e) {
    e.preventDefault();
    if ($("#formCampaign").valid() && validateImage() && validateMessageTestHtml()) {
      $('#loadingCampaignModal').modal('show');
      $.ajax({
        url: this.action,
        type: this.method,
        data: new FormData(this),
        cache: false,
        contentType: false,
        processData: false,
        success: function (response) {
          if (response.success) {
            $('#loadingCampaignModal').modal('hide');
            $('#lblBody').append(response.message);
            $('#myModal').modal('show')
          } else {
            $('#loadingCampaignModal').modal('hide');
            $('#lblBody').append(response.error);
            $('#myModal').modal('show')
          }

        },
        error: function (xhr, error, status) {
          $('#loadingCampaignModal').modal('hide');
          $('#lblBody').append('Error');
          $('#myModal').modal('show')
        }
      });
    }
  });

  function validateImage() {

    var isChannelSubscribers = "@ViewBag.IsChannelSuscribers".toLowerCase() == "true";
    var isChannelPushCrew = "@ViewBag.IsChannelPushCrew".toLowerCase() == "true";
    var isChannelMailChimp = "@ViewBag.IsChannelMailChimp".toLowerCase() == "true";
    var isChannelCampaignMonitor = "@ViewBag.IsChannelCampaignMonitor".toLowerCase() == "true";
    var isChannelAweber = "@ViewBag.IsChannelAweber".toLowerCase() == "true";
    var isChannelSendGrid = "@ViewBag.IsChannelSendGrid".toLowerCase() == "true";
    var isChannelActiveCampaign = "@ViewBag.IsChannelActiveCampaign".toLowerCase() == "true";
    var isChannelGetResponse = "@ViewBag.IsChannelGetResponse".toLowerCase() == "true";

    var isChannelIContact = "@ViewBag.IsChannelIContact".toLowerCase() == "true";
    var isChannelSendinBlue = "@ViewBag.IsChannelSendinBlue".toLowerCase() == "true";
    var isChannelOneSignal = "@ViewBag.IsChannelOneSignal".toLowerCase() == "true";
    var isChannelMailJet= "@ViewBag.IsChannelMailJet".toLowerCase() == "true";

    if (isChannelMailChimp || isChannelCampaignMonitor || isChannelAweber || isChannelSendGrid || isChannelActiveCampaign ||
      isChannelGetResponse || isChannelIContact || isChannelSendinBlue || isChannelOneSignal || isChannelMailJet) {
      return true;
    }
    if ($("#fileup").val().length > 0) {
      var ext = $('#fileup').val().split('.').pop().toLowerCase();
      if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg']) == -1) {
        $("#lblFileUp").show().text('Invalid extension');
        scrollToFileUpload();
      } else {
        $("#lblFileUp").hide();
        return true;
      }
    } else {
      $("#lblFileUp").show().text('Image required');
      scrollToFileUpload();
    }
  }

  function scrollToFileUpload() {
    $("html, body").animate({ scrollTop: $("#Protocols").offset().top }, 0);
  }

  function isEmpty(value) {
    return typeof value == 'string' && !value.trim() || typeof value == 'undefined' || value === null;
  }
</script>

<script type="text/javascript">
  $().ready(function () {
    $("#formCampaign").validate();
  });
</script>
<script type="text/javascript">
    $(document).ready(function () {
      $("#Protocols").change(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ProtocolSelecc")',
                data: { id: $("#Protocols").val() },
                success: function (tags) {
                },
                error: function (ex) {
                    alert('Failed to retrieve partners.' + ex);
                }
            });
            return false;
        })
    });
</script>
<script type="text/javascript">
  $("#TitleText").keyup(function () {
    $('#lblTitleShowcase').text($("#TitleText").val());
  });
</script>

<script type="text/javascript">
  $("#MessageText").keyup(function () {
    $('#lblMessageShowcase').text($("#MessageText").val());
  });
</script>
<script type="text/javascript">
  $("#fileup").change(function () {
    var file = $('#fileup')[0].files[0]
    if (file) {
      $("#filename").text(file.name);
    }
  });
</script>
@*<script src="~/Scripts/tinymce/tinymce.min.js"></script>*@
<script>
  //tinymce.init({ selector: '#MessageTextHtml' });
  $(function () {
    $("#MessageTextHtml").htmlarea();
  });
</script>
<script type="text/javascript">
  function validateMessageTestHtml() {
    var isChannelMailChimp = ('@ViewBag.IsChannelMailChimp' == 'True');
    var isChannelCampaignMonitor = ('@ViewBag.IsChannelCampaignMonitor' == 'True');
    var isChannelAweber = ('@ViewBag.IsChannelAweber'.toLowerCase() == 'true');
    var isChannelSendGrid = "@ViewBag.IsChannelSendGrid".toLowerCase() == "true";
    var isChannelActiveCampaign = "@ViewBag.IsChannelActiveCampaign".toLowerCase() == "true";
    var isChannelGetResponse = "@ViewBag.IsChannelGetResponse".toLowerCase() == "true";

    var isChannelIContact = "@ViewBag.IsChannelIContact".toLowerCase() == "true";
    var isChannelSendinBlue = "@ViewBag.IsChannelSendinBlue".toLowerCase() == "true";
    var isChannelMailJet= "@ViewBag.IsChannelMailJet".toLowerCase() == "true";

    if (isChannelMailChimp || isChannelCampaignMonitor || isChannelAweber || isChannelSendGrid ||
      isChannelActiveCampaign || isChannelGetResponse || isChannelIContact || isChannelSendinBlue || isChannelMailJet) {
      $("#lblMessageTextHtml").hide();
      //tinyMCE.triggerSave();
      //var textHtml = tinyMCE.get('MessageTextHtml').getContent();
      var textHtml = $("#MessageTextHtml").val();
      if (isEmpty(textHtml)) {
        $("#lblMessageTextHtml").text("Message is required");
        $("#lblMessageTextHtml").show();
      } else {
        return true;
      }
    } else {
      return true;
    }
  }
</script>
