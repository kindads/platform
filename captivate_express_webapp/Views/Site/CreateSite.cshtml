@model captivate_express_webapp.Models.Publisher.CreateSiteModel
@{
  ViewBag.Title = "Create Site";
  Layout = "~/Views/Shared/_PublisherLayout.cshtml";
}

@using (Html.BeginForm("CreateSite", "Site", null, FormMethod.Post, new { @id = "formSite" }))
{
  @Html.AntiForgeryToken()
  <div class="container-fluid">
    <div class="row">
      <div class="col-sm-12 main-bar">
        <h1 class="title">Create your site</h1>
      </div>
    </div>

    <div class="row">
      <div class="col-md-12">
        <div class="white-block">
          @if (@ViewBag.Message != null && !string.IsNullOrEmpty(@ViewBag.Message))
          {
            <div class="callout callout-info">
              <h4>@ViewBag.Message</h4>

              In order to see all your products go to  @Html.ActionLink("Products", "ShowSites", "Publisher", new { @class = "link" }) page.
            </div>
          }
          <div class="heading">
            <h2>New Site</h2>
          </div>

          <div class="body-content">
            <div class="form-data form-horizontal">
              <form>
                <fieldset>
                  <div class="row">
                    <div class="col-md-12">

                      <div class="form-group">
                        @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9 form-inline">
                          <div class="input-group">
                            <div class="input-group-btn">
                              @Html.DropDownList("Protocols", ViewData["protocols"] as List<SelectListItem>, new { @class = "form-control dropdown", @required = "true", @data_msg_required = "Url protocol is required" })
                              @Html.ValidationMessage("Protocols")
                            </div>
                            @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @placeholder = "nytimes.com", @class = "form-control lowercase", @required = "true", @data_msg_required = "Site URL is required" } })
                          </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                      </div>

                      <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9 form-inline">
                          @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @placeholder = "Site Name", @class = "form-control", @required = "true", @data_msg_required = "Name is required" } })
                          @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                      </div>

                      <div class="form-group">
                        @Html.LabelFor(model => model.CategoryTypeSelect, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9 form-inline">
                          @Html.DropDownList("Categories", ViewData["categories"] as List<SelectListItem>, "Please select", new { @class = "form-control", @required = "true", @data_msg_required = "Category is required" })
                          @Html.ValidationMessage("Categories")
                        </div>
                      </div>

                    </div>
                  </div>

                  <div class="row">
                    <div class="col-md-9 col-md-offset-3">
                      <div class="form-group col-sm-12">
                        <input type="submit" value="Create Site" class="btn btn-primary btn-lg" />
                      </div>
                    </div>
                    </div>
                </fieldset>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
}
<div class="modal fade" id="myModal" role="dialog" aria-labelledby="siteSucessModal" aria-hidden="true" data-keyboard="false" data-backdrop="static">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title">
          <label id="lblTitle"></label>
        </h2>
      </div>
      <div class="modal-body">
        <div class="panel">
          <div class="panel-body">
            @using (Html.BeginForm("ValidateSite", "Site", null, FormMethod.Post, new { @id = "formSiteValidate" }))
            {
              @Html.Hidden("idSite")
              <h3>
                <label id="lblBody"></label>
              </h3>
              <br>
              <div id="pnlInfoSite" style="display:none">
                <p>You must to verify your <strong><label id="lblSiteUrl"></label></strong> in order you ca use it.</p>
              </div>
              <div class="add-space s2x"></div>
              <div class="btn-group">
                <input id="btnValidateSite" type="submit" value="Proceed to validate" class="btn btn-primary btn-lg" />
              </div>
            }
          </div>
        </div>
      </div>
      <div class="modal-footer">
        
      </div>
    </div>
  </div>
</div>

@Scripts.Render("~/bundles/customjs")

<script type="text/javascript">
  $('#formSite').submit(function (e) {
    if ($("#formSite").valid()) {
      e.preventDefault();
      $.ajax({
        url: this.action,
        type: this.method,
        data: new FormData(this),
        cache: false,
        contentType: false,
        processData: false,
        success: function (response) {
          if (response.success) {
            $('#lblTitle').append('Congratulations!');
            $('#lblBody').append(response.message);
            $('#lblSiteUrl').append($('#Protocols').val().concat($('#URL').val()));
            $("#pnlInfoSite").show();
            $("#idSite").val(response.idSite);
            $('#myModal').modal('show');
          } else {
            $('#lblTitle').append('Error');
            $('#lblBody').append(response.error);
            $("#pnlInfoSite").hide();
            $('#myModal').modal('show');
          }

        },
        error: function (xhr, error, status) {
          $('#lblTitle').append('Error');
          $('#lblBody').append(response.error);
          $("#pnlInfoSite").hide();
          $('#myModal').modal('show');
        }
      });
    }
  });

  $(document).ready(function () {
    $('[data-toggle="tooltip"]').tooltip();
  });

  $(function () {
    $('.link-dashboard').addClass('active');
  });

  $(document).ready(function () {
    $("#Categories").change(function () {
      $("#Tags").empty();
      $.ajax({
        type: 'POST',
        url: '@Url.Action("CategorySelecc")',
        dataType: 'json',
        data: { id: $("#Categories").val() },
        success: function (tags) {
        },
        error: function (ex) {
          alert('Failed to retrieve categories.' + ex);
        }
      });
      return false;
    })
  });

  $().ready(function () {
    $("#formSite").validate();
  });

  $(document).ready(function () {
    $("#Protocols").change(function () {
      $.ajax({
        type: 'POST',
        url: '@Url.Action("ProtocolSelecc")',
        data: { id: $("#Protocols").val() },
        success: function (tags) { },
        error: function (ex) {
          alert('Failed to retrieve partners.' + ex);
        }
      });
      return false;
    })
  });
</script>

