@model KindAds.Models.Advertiser.CreateCampaingModel
@{
  ViewBag.Title = "Welcome Publisher | Kind Ads System";

  var _service = new KindAds.Services.AccessService();
  var idUser = Microsoft.AspNet.Identity.IdentityExtensions.GetUserId(User.Identity);
  var displayActionValidate = ViewBag.toValidate == true ? "display:inline" : "display:none";
  var displayActionDetail = ViewBag.toValidate == false ? "display:inline" : "display:none";

  if (_service.ContainRoleUser(idUser, (int)KindAds.Utils.Enums.Roles.Advertiser))
  {
    Layout = "~/Views/Shared/_AdvertiserLayout.cshtml";
  }
  else if (_service.ContainRoleUser(idUser, (int)KindAds.Utils.Enums.Roles.Publisher))
  {
    Layout = "~/Views/Shared/_PublisherLayout.cshtml";
  }
}


@Html.HiddenFor(m => m.Product.Price, new { id = "ProductPrice" })



<div class="container-fluid">
  <div class="row">
    <div class="col-sm-12 main-bar">
      <h1 class="title" onclick="goBack();">
        <span>
          <i class="fa fa-long-arrow-left"></i>
        </span>
        Approve campaign
      </h1>
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <div class="white-block clearfix">
        <div class="heading">
          <h2>Approve campaign</h2>
        </div>

        <div class="body-content">
          <div class="row">
            <div class="col-md-6">
              @Html.Partial("_CampaignShowData", Model)
              <div id="pnlActionsValidate" style="@displayActionValidate">
                <div class="row">
                  <div class="col-md-12 form-group">
                    @using (Html.BeginForm("ValidateCampaign", "Campaign", null, FormMethod.Post, new { @id = "formValidateCampaign" }))
                    {
                      @*<input value="Approve campaign" type="submit" class="btn btn-primary" />*@
                    <button type="button" class="btn btn-secondary" data-toggle="modal" onclick="mostrarComingSoon();">
                      Approve campaign
                    </button>
                    }
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-12 form-group">
                    @using (Html.BeginForm("RejectCampaign", "Campaign", null, FormMethod.Post, new { @id = "formRejectCampaign" }))
                    {
                      <input value="Reject" type="submit" class="btn btn-default" />
                    }
                  </div>
                </div>
              </div>
              <div id="pnlActionsDetail" style="@displayActionDetail">
                <div class="row">
                  <div class="col-md-12 form-group">
                    @*<input value="Return" type="button" class="btn btn-primary" onclick="goBack();" />*@
                    @Html.ActionLink("Return", "SortCampaigns", "Campaign", new { @class = "btn btn-primary" })
                  </div>
                </div>
              </div>
            </div>
            <div class="col-sm-6">
              @Html.Partial("_CampaignRevision", Model.ListCampaingMessageChat)
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

@Html.Partial("_AuthorizeCampaignModal", Model)

@Html.Partial("NeedEnableModal")

@Html.Partial("NeedLogInModal")

@Html.Partial("WrongCampaignSettingsModal")

@Html.Partial("SuccededCampaignSettingsModal")

@Html.Partial("NeedKindAdsModal")

@Html.Partial("ComingSoonModal")

<div class="modal fade" id="modalReject" role="dialog" aria-labelledby="siteSucessModal" aria-hidden="true" data-keyboard="false" data-backdrop="static">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Campaign message<label id="lblTitle"></label></h4>
      </div>
      <div class="modal-body">
        <div class="panel">
          <div class="panel-body text-center">
            <form>
              <p><label id="lblBody"></label></p>
              <div class="add-space"></div>
              @*@Html.ActionLink("View all campaigns", "SortCampaigns", "Campaign", new { @class = "btn btn-default" })*@
              @Html.ActionLink("View all campaigns", "SortCampaigns", "Campaign", new { @class = "btn btn-primary" })
            </form>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <div class="avatar-hint"></div>
      </div>
    </div>
  </div>
</div>
@Html.Partial("_LoadingCampaignModal", Model)
@Scripts.Render("~/bundles/customjs")

<script>
  $(function () {
    $('.link-campaign').addClass('active');

  });
</script>

<script src="~/Modules/metamaskModule.js"></script>
<script type="text/javascript">

  var mostrarComingSoon = function () {

    $("#btnComingSoonModal").click(function () {
      $("#ComingSoonModal").modal("hide");
    });

    $("#ComingSoonModal").modal("show");
  }

  var ejecutar = function () {
    e.preventDefault();

    //Obtenemos los valores
    var idCampaign = @Html.Raw(Json.Encode(Model.IdCampaign));
    var price = $("#ProductPrice").val();
    var Abi =@Html.Raw(Json.Encode(Model.Abistr));
    var Wallet= @Html.Raw(Json.Encode(Model.UserWallet));


    // Nueva funcionalidad -------------------------------------------
    //var ApiUrl= @Html.Raw(Json.Encode(Model.ApiUrl));
    var ApiUrl = 'http://localhost:57265/api/';

    // inicializamos metamask con la url del api segun el ambiente
    var metamaskIsEnabled = metaMask.init(ApiUrl, Abi, Wallet,function () {
      // no esta activado

      $("#NeedEnableModal").modal("show");
    });



    if (metamaskIsEnabled === 1) {
      metaMask.log("Si estoy activado");
      // si esta activado
      metaMask.getDefaultAccount(function () {
        // no esta logeado
        $("#NeedLogInModal").modal("show");
      }, function () {
        // si esta logeado
        //Checamos
        metaMask.getKindAdsBalance(Abi);

        $('#loadingCampaignValidateModal').modal('show');
        metaMask.currentBalanceEnough(price, idCampaign, function (result) {

          metaMask.log(">>> Core result:" + result);

          if (result === 1) {
            //Core behavior
            metaMask.log(">> Is enough");

            // cobramos la campaña
            metaMask.chargeCampaign(
              function () {
                metaMask.sendCampaign(
                  function () {

                    // se cierra el modal de espera
                    $('#loadingCampaignValidateModal').modal('hide');
                    $("#pnlCampaignModalSuccesMsg").hide();
                    $("#pnlCampaignModalErrorMsg").hide();
                    $("#pnlActionsDetail").show();
                    $("#pnlActionsValidate").hide();

                    // mostrar ventana que tu campaña fue enviada satisfactoriamente
                    // todo
                    $("#SuccededCampaignSettingsModal").modal("show");

                  }, idCampaign);
              }, idCampaign);


          }
          else {
            //Mostrar modal de error en los settings de la campaña
            // se cierra el modal de espera
            $('#loadingCampaignValidateModal').modal('hide');
            $("#pnlCampaignModalSuccesMsg").hide();
            $("#pnlCampaignModalErrorMsg").hide();

            $("#WrongCampaignSettingsModal").modal("show");
          }
        }, function () {
          $('#loadingCampaignValidateModal').modal('hide');
          $("#pnlCampaignModalSuccesMsg").hide();
          $("#pnlCampaignModalErrorMsg").hide();

          //Mostrar modal que no tiene suficiente Kinds
          $("#NeedKindAdsModal").modal("show");
        });

      });
    }

    //  eventos para cerrar el modal
    $("#btnCloseEnableMetamask").click(function () {
      $("#NeedEnableModal").modal("hide");
    });

    $("#btnCloseLogInMetamask").click(function () {
      $("#NeedLogInModal").modal("hide");
    });

    $("#btnWrongCampaignSettings").click(function () {
      $("#WrongCampaignSettingsModal").modal("hide");
    });

    $("#btnsuccededCampaignSettings").click(function () {
      $("#SuccededCampaignSettingsModal").modal("hide");
    });

    $("#btnCloseNeedKindsModal").click(function () {
      $("#NeedKindAdsModal").modal("hide");
    });

  }


  $('#formValidateCampaign').submit(function (e) {
    
    ejecutar();

  });


</script>
<script type="text/javascript">
  $('#formRejectCampaign').submit(function (e) {
    e.preventDefault();
    $.ajax({
      url: this.action,
      type: this.method,
      cache: false,
      contentType: false,
      processData: false,
      success: function (response) {
        if (response.success) {
          $('#lblBody').append(response.message);
          $('#modalReject').modal('show')
        } else {
          $('#lblBody').append(response.error);
          $('#modalReject').modal('show')
        }
      },
      error: function (xhr, error, status) {
        $('#lblBody').append('Error');
        $('#modalReject').modal('show')
      }
    });
  });
</script>
<script>
  function goBack() {
    window.history.back();
  }
</script>
<script>
  $("#btnSendMessage").click(function () {
    $('#btnSendMessage').attr('href', function () {
      var replace = getUrlVars(this.href)["message"];
      return this.href.replace(replace, $('#ChatMessage').val());
    });
  });

  function getUrlVars(data) {
    var vars = {};
    var parts = data.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
      vars[key] = value;
    });
    return vars;
  }
</script>
